{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/brain.svg","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","isSignedIn","OnRouteChange","style","display","justifyContent","onClick","className","FaceRecognition","ImageUrl","Box","id","width","height","src","alt","map","region","i","top","left","right","bottom","Logo","options","max","brain","SignIn","props","OnEmailChange","event","setState","signInEmail","target","value","OnPaswordChange","signInPassword","OnSignInSubmit","NProgress","start","state","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","loadUser","done","this","htmlFor","onChange","type","name","React","Component","Register","OnNameChange","OnRegisterSubmit","user","Rank","Username","Entries","ImageLinkForm","OnInputChange","OnButtonClick","particleOptions","particles","number","density","enable","value_area","line_linked","shadow","color","blur","stroke","initialState","input","imageUrl","box","route","entries","joined","App","CalculateBoundingBox","clarifaiFaces","outputs","regions","image","document","getElementById","Number","clarifaiFace","clarifaiFaceRegion","region_info","bounding_box","left_col","top_row","right_col","bottom_row","updateBoxState","count","Object","assign","catch","err","console","log","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b930df71.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({isSignedIn, OnRouteChange}) => {\n    if(isSignedIn) {\n        return (\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <div \n                    onClick = {() => OnRouteChange('signin')}\n                    className=\"dim link white underline pointer f4 pa3\"\n                >Signout</div>\n            </nav>\n        )\n    } else {\n        return (\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <div \n                    onClick = {() => OnRouteChange('signin')}\n                    className=\"dim link white underline pointer f4 pa3\"\n                >Sign In</div>\n                <div \n                    className=\"dim link white underline pointer f4 pa3\"\n                    onClick = {() => OnRouteChange('register')}\n                >Register</div>\n            </nav>\n        )\n    }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './FaceRecognition.css';\n\n\nconst FaceRecognition = ({ ImageUrl, Box }) => {\n  return (\n    <div className='centerContent ma'>\n      <div className=\"imageBox absolute mt2\">\n        <img\n          id='inputImage'\n          width='400px'\n          height='auto'\n          src={ImageUrl}\n          alt=\"\"\n        />\n        {\n          Box.map((region, i) => {\n            return (\n              <div\n                key={i}\n                className=\"bounding-box\"\n                style={{\n                  top: region.top,\n                  left: region.left,\n                  right: region.right,\n                  bottom: region.bottom\n                }}\n              ></div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default FaceRecognition;\n","export default __webpack_public_path__ + \"static/media/brain.bb9f8fe1.svg\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport brain from './brain.svg'\nconst Logo = () => {\n    return (\n        <Tilt className=\"Tilt br3 pa3 ma4 mb0 mt0 shadow-5\" options={{ max : 30 }} style={{ height: 125, width: 125 }} >\n            <div className=\"Tilt-inner\">\n                <img alt='logo' src={brain} />\n            </div>\n       </Tilt>\n    )\n}\n\nexport default Logo;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport NProgress from 'nprogress';\n\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    }\n  }\n\n  OnEmailChange = (event) => {\n    this.setState({signInEmail: event.target.value})\n  }\n\n  OnPaswordChange = (event) => {\n    this.setState({signInPassword: event.target.value})\n  }\n\n  OnSignInSubmit = () => {\n    NProgress.start();\n    const {signInEmail, signInPassword } = this.state;\n    fetch('https://whispering-sierra-61887.herokuapp.com/signin', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      if(data.id) {\n        this.props.loadUser(data)\n        this.props.OnRouteChange('home');\n        NProgress.done()\n      } \n    })\n\n\n    \n  }\n\n  render() {\n    const {OnRouteChange} = this.props\n    return (\n      <article className=\"br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f3 fw6 ph0 mh0\">Sign In</legend>\n              \n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\n                <input \n                  onChange = {this.OnEmailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                  type=\"email\" \n                  name=\"email-address\" \n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\n                <input \n                  onChange = {this.OnPaswordChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                  type=\"password\" \n                  name=\"password\" \n                  id=\"password\" \n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.OnSignInSubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \n                type=\"submit\" \n                value=\"Sign in\" \n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <a\n                onClick={() => OnRouteChange('register')}\n                className=\"f6 link dim black db pointer\"\n              >Register</a>\n            </div>\n          </div>\n        </main>\n      </article>\n    )\n  }\n\n}\n\n\nexport default SignIn;\n","import React from 'react';\n\nclass Register extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: ''\n    }\n  }\n\n\n  OnNameChange = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  OnEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  OnPaswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  OnRegisterSubmit = () => {\n    const {email, password, name } = this.state;\n    fetch('https://whispering-sierra-61887.herokuapp.com/register', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password\n      })\n    })\n    .then(response => response.json())\n    .then(user => {\n      if(user.id) {\n        this.props.loadUser(user);\n        this.props.OnRouteChange('home');\n      } \n    })\n    \n  }\n\n  render() {\n    return (\n      <article className=\"br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f3 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"name\">Name</label>\n                <input \n                  onChange = {this.OnNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                  type=\"text\" \n                  name=\"name\" \n                  id=\"name\" \n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\n                <input \n                  onChange={this.OnEmailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                  type=\"email\" \n                  name=\"email-address\" \n                  id=\"email-address\" \n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\n                <input \n                  onChange={this.OnPaswordChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                  type=\"password\" \n                  name=\"password\" \n                  id=\"password\" \n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.OnRegisterSubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\" \n                type=\"submit\" \n                value=\"Register\" \n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    )\n  }\n\n}\n\n\nexport default Register;\n","import React from 'react';\nimport './Rank.css'\n\nconst Rank = ({Username, Entries}) => {\n    return (\n        <div className='white'>\n            <div className='f3'>{`${Username}, your Entry Count is..`}.</div>\n            <div className='f1'>{`${Entries}`}</div>\n        </div>\n    )\n}\n\nexport default Rank;\n","import React from 'react';\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({ OnInputChange, OnButtonClick }) => {\n    return (\n       <div>\n           <p className='white f4'>\n                {'This Magic brain will detect faces in your pictures. Give it a try'} \n           </p>\n           <div className='centerContent ph3'>\n                <div className=\"form pa4 br3 shadow-5 centerContent\">\n                    <input \n                        className='f4 pa2 w-70 center' \n                        type=\"text\" \n                        onChange={OnInputChange}\n                    />\n                    <button \n                        className='w-30 f4 grow bw0 ph3 pv2 dib white bg-light-purple'\n                        onClick={OnButtonClick}\n                    >Detect</button>\n                </div>\n           </div>\n       </div>\n    )\n}\n\nexport default ImageLinkForm;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\n\n\n\nconst particleOptions = {\n    particles: {\n      number: {\n        density: {\n          enable: true,\n          value_area: 400\n        },\n        value:35\n      },\n      line_linked: {\n        shadow: {\n          enable: true,\n          color: \"#3CA9D1\",\n          blur: 5\n        }\n      },\n      \"shape\": {\n        type: \"circle\",\n        stroke: {\n          width: 1,\n          color: \"#fff\"\n        }\n      }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name:'',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n\n  }\n  OnInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  CalculateBoundingBox = (data) => {\n    const clarifaiFaces = data.outputs[0].data.regions;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return (\n      clarifaiFaces.map((clarifaiFace, i) => {\n        let clarifaiFaceRegion = clarifaiFace.region_info.bounding_box;\n        return {\n          left: clarifaiFaceRegion.left_col * width,\n          top: clarifaiFaceRegion.top_row * height,\n          right: width - (clarifaiFaceRegion.right_col * width),\n          bottom: height - (clarifaiFaceRegion.bottom_row * height)\n        }\n      })\n    )\n    \n  }\n\n  updateBoxState = (box) => {\n    this.setState({box: box})\n  }\n\n\n\n  OnButtonClick = () => {\n    this.setState({imageUrl: this.state.input})\n    fetch('https://whispering-sierra-61887.herokuapp.com/imageApi', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then( \n      response => {\n        this.updateBoxState(this.CalculateBoundingBox(response))\n        if(response) {\n          // update entry count in server\n          fetch('https://whispering-sierra-61887.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n        }\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  OnRouteChange = (route) => {\n    if(route === 'home') {\n      this.setState({isSignedIn: true})\n    } else {\n      this.setState(initialState)\n    }\n    this.setState({route : route})\n  }\n\n  render() {\n    const {route, isSignedIn, box, imageUrl} = this.state;\n    const {name, entries} = this.state.user;\n    return (\n      <div className=\"App\">\n        <Particles\n          className='particles'\n          params={particleOptions}\n        />\n        <Navigation \n          isSignedIn = {isSignedIn} \n          OnRouteChange = {this.OnRouteChange}\n        />\n        {\n          (route === 'signin')\n          ? <SignIn loadUser = {this.loadUser} OnRouteChange = {this.OnRouteChange} />\n          : (\n              (route === 'register')\n              ? <Register loadUser = {this.loadUser} OnRouteChange = {this.OnRouteChange}/>\n              : <div>\n                  <Logo />\n                  <Rank Username={name} Entries = {entries}/>\n                  <ImageLinkForm \n                    OnInputChange = {this.OnInputChange}\n                    OnButtonClick = {this.OnButtonClick} \n                  />\n                  <FaceRecognition\n                    Box = {box} \n                    ImageUrl = {imageUrl}\n                  />\n                </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}