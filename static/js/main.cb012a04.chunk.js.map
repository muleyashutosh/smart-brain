{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Logo/brain.svg","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","isSignedIn","OnRouteChange","style","display","justifyContent","onClick","className","FaceRecognition","ImageUrl","Box","id","width","height","src","alt","map","region","i","top","left","right","bottom","Logo","options","max","brain","SignIn","props","OnEmailChange","event","setState","signInEmail","target","value","OnPaswordChange","signInPassword","OnInputFocus","requestFailed","OnSignInSubmit","preventDefault","NProgress","start","state","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","loadUser","errorMessage","done","this","onSubmit","htmlFor","onChange","type","name","onFocus","required","min","React","Component","Register","OnNameChange","OnRegisterSubmit","user","Rank","Username","Entries","ImageLinkForm","OnInputChange","OnButtonClick","particleOptions","particles","number","density","enable","value_area","line_linked","shadow","color","blur","shape","stroke","configure","showSpinner","initialState","input","imageUrl","box","route","entries","joined","App","CalculateBoundingBox","clarifaiFaces","outputs","regions","image","document","getElementById","Number","clarifaiFace","clarifaiFaceRegion","region_info","bounding_box","left_col","top_row","right_col","bottom_row","updateBoxState","count","Object","assign","catch","err","console","log","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.cb012a04.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({isSignedIn, OnRouteChange}) => {\n    if(isSignedIn) {\n        return (\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <div \n                    onClick = {() => OnRouteChange('signin')}\n                    className=\"dim link white underline pointer f4 pa3\"\n                >Signout</div>\n            </nav>\n        )\n    } else {\n        return (\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                <div \n                    onClick = {() => OnRouteChange('signin')}\n                    className=\"dim link white underline pointer f4 pa3\"\n                >Sign In</div>\n                <div \n                    className=\"dim link white underline pointer f4 pa3\"\n                    onClick = {() => OnRouteChange('register')}\n                >Register</div>\n            </nav>\n        )\n    }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './FaceRecognition.css';\n\n\nconst FaceRecognition = ({ ImageUrl, Box }) => {\n  return (\n    <div className='centerContent ma'>\n      <div className=\"imageBox absolute mt2\">\n        <img\n          id='inputImage'\n          width='400px'\n          height='auto'\n          src={ImageUrl}\n          alt=\"\"\n        />\n        {\n          Box.map((region, i) => {\n            return (\n              <div\n                key={i}\n                className=\"bounding-box\"\n                style={{\n                  top: region.top,\n                  left: region.left,\n                  right: region.right,\n                  bottom: region.bottom\n                }}\n              ></div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default FaceRecognition;\n","export default __webpack_public_path__ + \"static/media/brain.bb9f8fe1.svg\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport brain from './brain.svg'\nconst Logo = () => {\n    return (\n        <Tilt className=\"Tilt br3 pa3 ma4 mb0 mt0 shadow-5\" options={{ max : 30 }} style={{ height: 125, width: 125 }} >\n            <div className=\"Tilt-inner\">\n                <img alt='logo' src={brain} />\n            </div>\n       </Tilt>\n    )\n}\n\nexport default Logo;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: \"\",\n      signInPassword: \"\",\n      requestFailed: false,\n      errorMessage: \"\",\n    };\n  }\n\n  OnEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value });\n  };\n\n  OnPaswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value });\n  };\n\n  OnInputFocus = () => {\n    this.setState({ requestFailed: false });\n  };\n\n  OnSignInSubmit = (event) => {\n    event.preventDefault();\n    NProgress.start();\n    const { signInEmail, signInPassword } = this.state;\n    fetch(\"https://whispering-sierra-61887.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.id) {\n          this.props.loadUser(data);\n          this.props.OnRouteChange(\"home\");\n        } else if (data === \"Wrong Credentials\") {\n          this.setState({\n            requestFailed: true,\n            errorMessage: \"Invalid Email/Password\",\n          });\n        } else {\n          this.setState({\n            requestFailed: true,\n            errorMessage: \"Error connecting to Server\",\n          });\n        }\n        NProgress.done();\n      });\n  };\n\n  render() {\n    const { OnRouteChange } = this.props;\n    const { requestFailed, errorMessage } = this.state;\n    return (\n      <article className=\"br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80\">\n          <form className=\"measure\" onSubmit={this.OnSignInSubmit}>\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f3 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  onChange={this.OnEmailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onFocus={this.OnInputFocus}\n                  required\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  onChange={this.OnPaswordChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onFocus={this.OnInputFocus}\n                  required\n                  min=\"8\"\n                />\n              </div>\n            </fieldset>\n            {requestFailed ? <div className=\"error\">{errorMessage}</div> : null}\n            <div className=\"\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <a\n                onClick={() => OnRouteChange(\"register\")}\n                className=\"f6 link dim black db pointer\"\n              >\n                Register\n              </a>\n            </div>\n          </form>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      requestFailed: false,\n      errorMessage: \"\",\n    };\n  }\n\n  OnNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  OnEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  OnInputFocus = () => {\n    this.setState({ requestFailed: false });\n  };\n\n  OnPaswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  OnRegisterSubmit = (event) => {\n    event.preventDefault();\n    NProgress.start();\n    const { email, password, name } = this.state;\n    fetch(\"https://whispering-sierra-61887.herokuapp.com/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.OnRouteChange(\"home\");\n        } else {\n          this.setState({\n            requestFailed: true,\n            errorMessage: \"Unable to register\",\n          });\n        }\n        NProgress.done();\n      });\n  };\n\n  render() {\n    const { requestFailed, errorMessage } = this.state;\n    return (\n      <article className=\"br3 shadow-5 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80\">\n          <form className=\"measure\" onSubmit={this.OnRegisterSubmit}>\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f3 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.OnNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  required\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  onChange={this.OnEmailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  required\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  onChange={this.OnPaswordChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  required\n                />\n              </div>\n            </fieldset>\n            {requestFailed ? <div className=\"error\">{errorMessage}</div> : null}\n            <div className=\"\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f5 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </form>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react';\nimport './Rank.css'\n\nconst Rank = ({Username, Entries}) => {\n    return (\n        <div className='white'>\n            <div className='f3'>{`${Username}, your Entry Count is..`}.</div>\n            <div className='f1'>{`${Entries}`}</div>\n        </div>\n    )\n}\n\nexport default Rank;\n","import React from 'react';\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({ OnInputChange, OnButtonClick }) => {\n    return (\n       <div>\n           <p className='white f4'>\n                {'This Magic brain will detect faces in your pictures. Give it a try'} \n           </p>\n           <div className='centerContent ph3'>\n                <div className=\"form pa4 br3 shadow-5 centerContent\">\n                    <input \n                        className='f4 pa2 w-70 center' \n                        type=\"text\" \n                        onChange={OnInputChange}\n                    />\n                    <button \n                        className='w-30 f4 grow bw0 ph3 pv2 dib white bg-light-purple'\n                        onClick={OnButtonClick}\n                    >Detect</button>\n                </div>\n           </div>\n       </div>\n    )\n}\n\nexport default ImageLinkForm;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Logo from \"./components/Logo/Logo\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Particles from \"react-particles-js\";\nimport NProgress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\n\nconst particleOptions = {\n  particles: {\n    number: {\n      density: {\n        enable: true,\n        value_area: 400,\n      },\n      value: 35,\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5,\n      },\n    },\n    shape: {\n      type: \"circle\",\n      stroke: {\n        width: 1,\n        color: \"#fff\",\n      },\n    },\n  },\n};\n\nNProgress.configure({ showSpinner: false });\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: [],\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n  OnInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  CalculateBoundingBox = (data) => {\n    const clarifaiFaces = data.outputs[0].data.regions;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return clarifaiFaces.map((clarifaiFace, i) => {\n      let clarifaiFaceRegion = clarifaiFace.region_info.bounding_box;\n      return {\n        left: clarifaiFaceRegion.left_col * width,\n        top: clarifaiFaceRegion.top_row * height,\n        right: width - clarifaiFaceRegion.right_col * width,\n        bottom: height - clarifaiFaceRegion.bottom_row * height,\n      };\n    });\n  };\n\n  updateBoxState = (box) => {\n    this.setState({ box: box });\n  };\n\n  OnButtonClick = () => {\n    NProgress.start();\n    this.setState({ imageUrl: this.state.input });\n    fetch(\"https://whispering-sierra-61887.herokuapp.com/imageApi\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        input: this.state.input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.updateBoxState(this.CalculateBoundingBox(response));\n        if (response) {\n          // update entry count in server\n          fetch(\"https://whispering-sierra-61887.herokuapp.com/image\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              NProgress.done();\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  OnRouteChange = (route) => {\n    if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    } else {\n      this.setState(initialState);\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { route, isSignedIn, box, imageUrl } = this.state;\n    const { name, entries } = this.state.user;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          OnRouteChange={this.OnRouteChange}\n        />\n        {route === \"signin\" ? (\n          <SignIn loadUser={this.loadUser} OnRouteChange={this.OnRouteChange} />\n        ) : route === \"register\" ? (\n          <Register\n            loadUser={this.loadUser}\n            OnRouteChange={this.OnRouteChange}\n          />\n        ) : (\n          <div>\n            <Logo />\n            <Rank Username={name} Entries={entries} />\n            <ImageLinkForm\n              OnInputChange={this.OnInputChange}\n              OnButtonClick={this.OnButtonClick}\n            />\n            <FaceRecognition Box={box} ImageUrl={imageUrl} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}